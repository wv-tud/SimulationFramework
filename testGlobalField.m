simPar = struct(...
    'type',                 'pinciroli',...
    'simTime',              1/15, ...
    'trialSize',            1, ...
    'fps',                  15, ...
    'nAgents',              20, ...  % Pinciroli agents
    'polyAgents',           0, ...  % Polynomial agents
    'nnAgents',             0, ...  % Simple neural network agets
    'sinusoidAgents',       0, ...  % Sinusoid agents
    'seperation_range',     1.75, ...
    'collision_range',      0.3, ...
    'camera_range',         4.0, ...
    'init',                 'random', ...
    'size',                 [50 50], ...
    'v_max',                5, ...
    'distance_cost',        1, ...
    'velocity_cost',        0, ...
    'seperation_cost',      10, ...
    'collision_cost',       1e5, ...
    'nnSize',               [10 10], ...
    'boc',                  1 ...
    );
simPar.mission          = {'cyberzooBucket'};

simPar.field            = struct(...
                            'type',     'bucket'                    ,...
                            'c_pos',    [0 0 10]                    ,...
                            'varargin', struct(                     ...
                                'seperation',   simPar.seperation_range + simPar.collision_range,...
                                'v_max',        0.9*simPar.v_max    ,...
                                'v_min',        0.1*simPar.v_max    ...
                            )...
                          );
% simPar.field(1)            = struct(                                   ...
%                             'type',     'circle'                    ,...
%                             'c_pos',    [-3 0 10]                    ,...
%                             'varargin', struct(                     ...
%                                 'radius',           7.5               ,...
%                                 'v_max',            simPar.v_max    ,...
%                                 'direction',        1               ,...
%                                 'bandwidth_gain',   0.01            ,...
%                                 'spiral_gain',      6               ...
%                             )                                       ...
%                           );   
% simPar.field(2)            = struct(                                   ...
%                             'type',     'circle'                    ,...
%                             'c_pos',    [3 0 10]                    ,...
%                             'varargin', struct(                     ...
%                                 'radius',           7.5               ,...
%                                 'v_max',            simPar.v_max    ,...
%                                 'direction',        -1              ,...
%                                 'bandwidth_gain',   0.01            ,...
%                                 'spiral_gain',      6               ...
%                             )                                       ...
%                           ); 

[~,sArena]              = sim_calc_cost(simPar,[0.12 0.12], false);
agentIndices            = sArena.chunkSplit(1:sArena.nAgents,length(simPar.field));
for i=1:length(simPar.field)
    sArena.agents{agentIndices(i,1)}.plotGlobalAttraction(-simPar.size(1)/2:0.075:simPar.size(1)/2,-simPar.size(2)/2:0.075:simPar.size(2)/2);
end